import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  BraketClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../BraketClient";
import {
  CancelQuantumTaskRequest,
  CancelQuantumTaskResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CancelQuantumTaskCommandInput
  extends CancelQuantumTaskRequest {}
export interface CancelQuantumTaskCommandOutput
  extends CancelQuantumTaskResponse,
    __MetadataBearer {}
export declare class CancelQuantumTaskCommand extends $Command<
  CancelQuantumTaskCommandInput,
  CancelQuantumTaskCommandOutput,
  BraketClientResolvedConfig
> {
  readonly input: CancelQuantumTaskCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CancelQuantumTaskCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: BraketClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CancelQuantumTaskCommandInput, CancelQuantumTaskCommandOutput>;
  private serialize;
  private deserialize;
}
