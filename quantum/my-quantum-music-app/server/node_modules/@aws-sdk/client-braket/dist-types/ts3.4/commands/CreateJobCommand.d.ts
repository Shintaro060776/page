import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  BraketClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../BraketClient";
import { CreateJobRequest, CreateJobResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CreateJobCommandInput extends CreateJobRequest {}
export interface CreateJobCommandOutput
  extends CreateJobResponse,
    __MetadataBearer {}
export declare class CreateJobCommand extends $Command<
  CreateJobCommandInput,
  CreateJobCommandOutput,
  BraketClientResolvedConfig
> {
  readonly input: CreateJobCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateJobCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: BraketClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CreateJobCommandInput, CreateJobCommandOutput>;
  private serialize;
  private deserialize;
}
