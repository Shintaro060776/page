import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  BraketClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../BraketClient";
import {
  CreateQuantumTaskRequest,
  CreateQuantumTaskResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CreateQuantumTaskCommandInput
  extends CreateQuantumTaskRequest {}
export interface CreateQuantumTaskCommandOutput
  extends CreateQuantumTaskResponse,
    __MetadataBearer {}
export declare class CreateQuantumTaskCommand extends $Command<
  CreateQuantumTaskCommandInput,
  CreateQuantumTaskCommandOutput,
  BraketClientResolvedConfig
> {
  readonly input: CreateQuantumTaskCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateQuantumTaskCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: BraketClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CreateQuantumTaskCommandInput, CreateQuantumTaskCommandOutput>;
  private serialize;
  private deserialize;
}
